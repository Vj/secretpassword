def ideal_password():
    print("\033[0m\n The IDEAL should comprised of minimum of following combination :"
          "\n- Passwords MUST be at least 6 characters long"
          "\n- Passwords MAY NOT contain your username or any part of your full name"
          "\n- Passwords MUST contain characters from at least three of the four class characteristics,"
          "\n\t- English Upper Case\n\t- English Lower Case\n\t- Numerals Punctuation marks and other symbols\n")
    return()


def disclaimer():
    print('\n\033[1;31;40m -\033[1;31;40mS\033[1;32;40mE\033[1;33;40mC\033[1;34;40mR\033[1;35;40mE\033[1;36;40mT P\033[1;35;40mA\033[1;34;40mSS\033[1;33;40mW\033[1;32;40mO\033[1;31;40mR\033[1;36;40mD-\033[0m  -GAME')
    print("\033[1;37;40m***************TERMS & CONDITIONS (ToC)***************\033[0m\n\n"
          "\033[0;32;47mPlease read the following terms and conditions carefully"
          "This Package does not Store ANY Password, nor promote any type of Hacking.\n"
          "The output is based on the DATA base store and available during issue of this\n"
          " package in public domain. Please read the instruction before entry in the package.\n"
          "All content published is only for your general information and entertainment purposes only\n "
          " and is not intended to address your particular requirements.\n "
          "Kindly do not promote this Package for your commercial purpose i.e. directly or indirectly.\n"
          "The prevailing Indian Law shall be applicable and its ammendment thereof\n"
          "If the above terms and conditions are agreed then, kindly proceed with this package\n\033[0m ")
    return()


def help():
    print("\033[1;35;43m - Enter [1] -To Check Your Secret Password Popularity\033[0m\n"
          "\033[1;35;43m - Enter [2] -To See the input options\033[0m\n"
          "\033[1;35;43m - Enter [3] -To Exit\033[0m\n")
    return()


# convert sting into number
def convert_string(x):
    string1 = 0
    string2 = 0
    for i in x:
        string1 = string1 + ord(i)
    string2 = string1 * 10 * 2 / 5
    if string2 > 1000:
        string2 = string2 /100
    elif string2 <= 1000:
        string2 = string2 * 1
    return(int(string2))


# to Identify Space in String
def spacetest(x):
    #x = input('enter sting')
    count = 0
    for i in x:
        if (i.isspace()) == True:
            count += 1
    return(count)


def Password_Popularity():
    try:
            x = True
            while x is True:
                print("\n\033[1;31;40m Options are: - ")
                help()
                selection = int(input("\033[1;31;40m Please select the Number from above List: "))
                if selection == 1:
                    password = input("\n\t \033[1;31;40m Enter your Secret Password : ")
                    x = len(password)
                    if len(password) < 6 :
                        print(f" \n\033[3;31;40m Hello Dear, your Secret Password length is {x} character !!!, which is too short to be a Password. ")
                        print("\n\n\tEnter a valid password")
                        x = True
                    elif len(password) > 50 :
                        print(f" \nHello Dear, your Secret Password length is {x} character !!!, which is too Big to be a Password. ")
                        print("\n\n\tEnter a valid password")
                        x = True
                    elif len(password) >= 6 and len(password) < 50:
                        x1 = (spacetest(password))
                        if x1 > 0:
                            print(f"\033[0;34;41m Your Secret Password has {x1} nos. of SPACE, Please check and Enter Correct Password\033[0m\n")
                            x = True
                        elif x1 == 0:
                            convert_string(password)
                            pause1 = input('\n\033[0;34;41mPlease enter any Key to Continue...\033[0m\n')
                            print(f"\n \033[2;21;34m Hello Dear,\n\t Your Secret Password is common with\033[1;37;41m {convert_string(password)} \033[0m\033[2;21;34mnumber users\n\n Note:It is as per Collected Data Base\n\033[0m")
                            print('\033[1;31;40m To continue.... and check another Password Popularity, select 1 or to Exit select 3 from below table:')
                            x = True
                elif selection == 2:
                    x = True
                elif selection == 3:
                    x = False
                    print(f"\n\n\t\t\033[2;31;40m Have a Nice Time\033[0m")
                    print('\n\033[1;31;40m THANK YOU for using THE-\033[1;31;40mS\033[1;32;40mE\033[1;33;40mC\033[1;34;40mR\033[1;35;40mE\033[1;36;40mT P\033[1;35;40mA\033[1;34;40mSS\033[1;33;40mW\033[1;32;40mO\033[1;31;40mR\033[1;36;40mD-\033[0m  -GAME')
    except ValueError:
            print("\nPlease Enter Valid Value")
            Password_Popularity()
    return



disclaimer()
x = input("\033[1;31;40mIf AGREE with ToC enter [1] or any other key to Exit :\033[0m")
if x == '1':
    print('\n\033[1;31;40m -----\033[1;31;40mS\033[1;32;40mE\033[1;33;40mC\033[1;34;40mR\033[1;35;40mE\033[1;36;40mT P\033[1;35;40mA\033[1;34;40mSS\033[1;33;40mW\033[1;32;40mO\033[1;31;40mR\033[1;36;40mD-----\033[0m\n')
    ideal_password()
    print("\n\033[1;30;41m To Check, How Common is your Secret Password !!!**** \033[0m")
    Password_Popularity()
else:
    print(f"\n\n\t\t\033[2;31;40m Have a Nice Time\033[0m")
    print('\n\033[1;31;40m THANK YOU for using THE-\033[1;31;40mS\033[1;32;40mE\033[1;33;40mC\033[1;34;40mR\033[1;35;40mE\033[1;36;40mT P\033[1;35;40mA\033[1;34;40mSS\033[1;33;40mW\033[1;32;40mO\033[1;31;40mR\033[1;36;40mD-\033[0m  -GAME')
